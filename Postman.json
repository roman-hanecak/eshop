{
  "openapi": "3.0.1",
  "info": {
    "title": "Visma.Bootcamp.eShop",
    "description": "This is a simple eShop API used for education purposes only.",
    "contact": {
      "name": "Tomas Blanarik - Github",
      "url": "https://github.com/tomas-blanarik/Visma.Bootcamp.eShop",
      "email": "tomas.blanarik@visma.com"
    },
    "license": {
      "name": "Visma Labs s.r.o.",
      "url": "https://visma.sk"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost:5001",
      "description": "Development localhost server - Kestrel"
    }
  ],
  "paths": {
    "/api/basket/{basket_id}/items": {
      "post": {
        "tags": [
          "Basket Management"
        ],
        "summary": "Add product to the basket",
        "description": "Associate given productId with actual basket of the user, which is represented by basketId",
        "operationId": "AddToBasket",
        "parameters": [
          {
            "name": "basket_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BasketItemModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BasketItemModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BasketItemModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasketDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/basket/{basket_id}": {
      "get": {
        "tags": [
          "Basket API"
        ],
        "summary": "Retrieve basket",
        "description": "Returns basket by given basketId with all products",
        "operationId": "GetBasket",
        "parameters": [
          {
            "name": "basket_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasketDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Basket Management"
        ],
        "summary": "Update basket",
        "description": "Update basket based on given basketId with items collection and their quantities",
        "operationId": "UpdateBasket",
        "parameters": [
          {
            "name": "basket_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BasketModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BasketModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BasketModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/api/basket/basket_id/items/{item_id}": {
      "delete": {
        "tags": [
          "Basket Management"
        ],
        "summary": "Remove item from basket",
        "description": "Remove item from the basket by given basketId and itemId",
        "operationId": "RemoveItemFromBasket",
        "parameters": [
          {
            "name": "basket_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/api/catalogs": {
      "get": {
        "tags": [
          "Catalog API"
        ],
        "summary": "Retrieve all catalogs from the system",
        "description": "Return all catalogs with their products",
        "operationId": "GetCatalogs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Catalog Management"
        ],
        "summary": "Create new catalog",
        "description": "Create new catalog in the database",
        "operationId": "CreateCatalog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogDto"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictError"
                }
              }
            }
          }
        }
      }
    },
    "/api/catalogs/{catalog_id}/products": {
      "get": {
        "tags": [
          "Product API"
        ],
        "summary": "Retrieve catalogue based on its Id",
        "description": "Return catalog given by catalogId and all its products associated to it",
        "operationId": "GetCatalog",
        "parameters": [
          {
            "name": "catalog_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product Management"
        ],
        "summary": "Create product in existing catalog",
        "description": "Create product in the database and associate it with catalog",
        "operationId": "CreateProductWithCatalogId",
        "parameters": [
          {
            "name": "catalog_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/api/catalogs/{catalog_id}": {
      "put": {
        "tags": [
          "Catalog Management"
        ],
        "summary": "Update existing catalog",
        "description": "Create new catalog in the database",
        "operationId": "UpdateCatalog",
        "parameters": [
          {
            "name": "catalog_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CatalogModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Catalog Management"
        ],
        "summary": "Delete existing catalog",
        "description": "Delete catalog from the database with all its products",
        "operationId": "DeleteCatalog",
        "parameters": [
          {
            "name": "catalog_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/api/products/{product_id}": {
      "get": {
        "tags": [
          "Product API"
        ],
        "summary": "Create product in existing catalog",
        "description": "Create product in the database and associate it with catalog",
        "operationId": "CreateProduct",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product Management"
        ],
        "summary": "Update product",
        "description": "Update product in the database",
        "operationId": "UpdateProduct",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product Management"
        ],
        "summary": "Delete product",
        "description": "Delete product from the database",
        "operationId": "DeleteProduct",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BadRequestError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "developerMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BasketDto": {
        "type": "object",
        "properties": {
          "basketId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BasketItemModel": {
        "required": [
          "productId",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "maximum": 20,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BasketModel": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BasketItemModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CatalogDto": {
        "type": "object",
        "properties": {
          "catalogId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CatalogModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConflictError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "developerMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotFoundError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "developerMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      }
    }
  }
}